{{#if this.isEditingDetails}}
  <Auk::Panel class="auk-panel--editing">
    <Auk::Panel::Header class="auk-u-px-1">
      <Auk::Toolbar as |Toolbar|>
        <Toolbar.Group @position="left" as |Group|>
          <Group.Item>
            <h4 class="auk-h4 auk-u-m-0">
              {{t "document-properties"}}
            </h4>
          </Group.Item>
        </Toolbar.Group>
      </Auk::Toolbar>
    </Auk::Panel::Header>
    <Auk::Panel::Body class="auk-u-p-1">
      <Auk::KeyValue
        data-test-details-tab-document-type
        @key={{t "document-type"}}
      >
        <Utils::DocumentTypeSelector
          data-test-details-tab-edit-document-type
          @selectedDocumentType={{this.documentType}}
          @onChange={{this.setDocumentType}}
        />
      </Auk::KeyValue>
      <Auk::KeyValue data-test-details-tab-name @key={{t "name-document"}}>
        <AuTextarea
          data-test-details-tab-edit-name
          aria-labelledby="piece-name"
          value={{@piece.name}}
          @width="block"
          {{on "input" (pick "target.value" (set @piece "name"))}}
        />
      </Auk::KeyValue>
      <Auk::KeyValue data-test-details-tab-access-level @key={{t "publicity"}}>
        <Utils::AccessLevelSelector
          @allowClear={{true}}
          @displayField="label"
          @sortField="position"
          @selected={{this.accessLevel}}
          @onChange={{this.setAccessLevel}}
          data-test-details-tab-edit-access-level
        />
      </Auk::KeyValue>
      <Auk::KeyValue
        data-test-document-details-panel-source-file
        @key={{capitalize (t (if @piece.file.derived "source-file" "file"))}}
      >
        <div class="au-u-flex au-u-flex--between au-u-flex--spaced-tiny">
          <span>
            {{@piece.name}}{{#if @piece.file}}.{{@piece.file.extension}}{{/if}}
          </span>
          {{! only allow the replacement of the docx if sign-flow is ongoing}}
          {{#if (or this.canEditPieceWithSignFlow @piece.file.derived)}}
            <AuButton
              data-test-document-details-panel-upload
              class="au-u-flex-item--fixed"
              @icon="upload"
              @iconAlignment="left"
              @skin="secondary"
              {{on "click" (toggle "isReplacingSourceFile" this)}}
            >
              {{t (if @piece.file "replace" "upload")}}
            </AuButton>
          {{/if}}
        </div>
      </Auk::KeyValue>
      {{#if this.isReplacingSourceFile}}
        <Auk::FileUploader
          @multiple={{false}}
          @onUpload={{set this "replacementSourceFile"}}
          @onQueueUpdate={{this.handleReplacementFileUploadQueue}}
        />
      {{/if}}
      {{#unless @piece.file.derived}}
        <Auk::KeyValue
          @key={{t "source-file"}}
        >
          <div class="au-u-flex au-u-flex--between">
            <AuButton
              @icon="upload"
              @iconAlignment="left"
              @skin="secondary"
              {{on "click" (toggle "isAddingSourceFile" this)}}
            >
              {{t "upload"}}
            </AuButton>
          </div>
        </Auk::KeyValue>
        {{#if this.isAddingSourceFile}}
          <Auk::FileUploader
            @multiple={{false}}
            @onUpload={{set this "uploadedSourceFile"}}
            @onQueueUpdate={{this.handleSourceFileUploadQueue}}
          />
        {{/if}}
      {{/unless}}
    </Auk::Panel::Body>
    <Auk::Panel::Footer>
      <Auk::Toolbar>
        <Auk::Toolbar::Group @position="left">
          <Auk::Toolbar::Item>
            <AuButton
              data-test-details-tab-cancel
              @skin="naked"
              @disabled={{this.isProcessing}}
              {{on "click" (perform this.cancelEditDetails)}}
            >
              {{t "cancel"}}
            </AuButton>
          </Auk::Toolbar::Item>
        </Auk::Toolbar::Group>
        <Auk::Toolbar::Group @position="right">
          <Auk::Toolbar::Item>
            <AuButton
              data-test-details-tab-save
              @skin="primary"
              @disabled={{this.isProcessing}}
              @loading={{this.saveDetails.isRunning}}
              {{on "click" (perform this.saveDetails)}}
            >
              {{t "save"}}
            </AuButton>
          </Auk::Toolbar::Item>
        </Auk::Toolbar::Group>
      </Auk::Toolbar>
    </Auk::Panel::Footer>
  </Auk::Panel>
{{else}}
  <Auk::Panel>
    <Auk::Panel::Header class="auk-u-px-1">
      <Auk::Toolbar as |Toolbar|>
        <Toolbar.Group @position="left" as |Group|>
          <Group.Item>
            <h4 class="auk-h4 auk-u-m-0">
              {{t "document-properties"}}
            </h4>
          </Group.Item>
        </Toolbar.Group>
        {{#unless
          (or
            this.loadDetailsData.isRunning
            this.loadSignatureRelatedData.isRunning
          )
        }}
          {{#if
            (and
              (user-may "manage-documents")
              (not this.isDraftPiece)
              (or
                this.canEditPieceWithSignFlow
                (user-may "edit-documents-with-ongoing-signature")
              )
            )
          }}
            <Toolbar.Group @position="right" as |Group|>
              {{#if
                (and this.isLastVersionOfPiece this.canEditPieceWithSignFlow)
              }}
                <Group.Item>
                  <AuButton
                    data-test-details-tab-delete
                    @skin="naked"
                    @alert={{true}}
                    @icon="trash"
                    @hideText={{true}}
                    {{on "click" (fn (mut this.isOpenVerifyDeleteModal) true)}}
                  >
                    {{t "delete"}}
                  </AuButton>
                </Group.Item>
              {{/if}}
              <Group.Item>
                <AuButton
                  data-test-details-tab-edit
                  @skin="naked"
                  @icon="pencil"
                  @hideText={{true}}
                  {{on "click" this.openEditDetails}}
                >
                  {{t "edit"}}
                </AuButton>
              </Group.Item>
            </Toolbar.Group>
          {{/if}}
        {{/unless}}
      </Auk::Toolbar>
    </Auk::Panel::Header>
    <Auk::Panel::Body class="auk-u-p-1">
      {{#if this.documentType}}
        <Auk::KeyValue
          data-test-details-tab-document-type
          @key={{t "document-type"}}
        >
          {{this.documentType.altLabel}}
        </Auk::KeyValue>
      {{/if}}
      <Auk::KeyValue data-test-details-tab-name @key={{t "name-document"}}>
        {{#let (or @piece.file.derived.extension @piece.file.extension) as |extension|}}
          {{@piece.name}}{{#if extension}}.{{extension}}{{/if}}
        {{/let}}
      </Auk::KeyValue>
      <Auk::KeyValue data-test-details-tab-access-level @key={{t "publicity"}}>
        <AccessLevelPill
          @accessLevel={{this.accessLevel}}
          @isEditable={{false}}
        />
      </Auk::KeyValue>
      {{#if this.internalReview}}
        <Submission::InternalReview
          @internalReview={{this.internalReview}}
        />
      {{/if}}
      <Auk::KeyValue
        data-test-document-details-panel-source-file
        @key={{capitalize (t (if @piece.file.derived "source-file" "file"))}}
      >
        {{#if (and @piece.file (await (this.canViewConfidentialPiece)))}}
          <AuLinkExternal
            data-test-document-details-panel-source-file-download
            href={{this.downloadLinkSourceFile}}
            @skin="primary"
            @icon="download"
            @iconAlignment="left"
            download
          >
            {{@piece.name}}.{{@piece.file.extension}}
          </AuLinkExternal>
        {{else}}
          {{@piece.name}}
        {{/if}}
      </Auk::KeyValue>
      {{#if (await (this.canViewSignedPiece))}}
        {{#if @piece.signedPiece.file}}
          <div class="auk-key-value-item">
            <div class="auk-key-value-item__label auk-u-max-width-medium">{{t "signed-document-certified"}}</div>
            <div class="auk-key-value-item__value au-u-flex au-u-flex--vertical-center au-u-flex--spaced-small">
              <AuLinkExternal
                href={{await @piece.signedPiece.namedDownloadLinkPromise}}
                @skin="primary"
                @icon="download"
                @iconAlignment="left"
                download
              >
                {{@piece.signedPiece.name}}.{{@piece.signedPiece.file.extension}}
              </AuLinkExternal>
              <div class="auk-o-flex__item--fix">
                <AccessLevelPill
                  @accessLevel={{await @piece.signedPiece.accessLevel}}
                  @isEditable={{false}}
                />
              </div>
              {{#if (user-may "remove-signatures")}}
                {{!-- template-lint-disable require-context-role --}}
                <AuDropdown
                  @icon="three-dots"
                  @title={{t "more"}}
                  @hideText={{true}}
                  @alignment="right"
                >
                  <AuButton
                    @skin="link"
                    @alert={{true}}
                    {{on "click" (toggle "isOpenVerifyDeleteSignFlow" this)}}
                    role="menuitem"
                  >
                    {{t "delete-signed-piece"}}
                  </AuButton>
                </AuDropdown>
                {{!-- template-lint-enable require-context-role --}}
              {{/if}}
            </div>
          </div>
        {{/if}}
      {{/if}}
      {{#if
        (and
          this.loadSignedPieces.isIdle
          this.signedPieceCopy.file
          (await (this.canViewConfidentialPiece))
        )
      }}
        <div class="auk-key-value-item">
          <div class="auk-key-value-item__label">{{t "signed-document"}}</div>
          <div class="auk-key-value-item__value au-u-flex au-u-flex--vertical-center au-u-flex--spaced-small">
            <AuLinkExternal
              href={{await this.signedPieceCopy.namedDownloadLinkPromise}}
              @skin="primary"
              @icon="download"
              @iconAlignment="left"
              download
            >
              {{this.signedPieceCopy.name}}.{{this.signedPieceCopy.file.extension}}
            </AuLinkExternal>
            <div class="auk-o-flex__item--fix">
              <AccessLevelPill
                @accessLevel={{this.signedPieceCopy.accessLevel}}
                @isEditable={{true}}
                @onChangeAccessLevel={{fn this.changeAccessLevelOfSignedPiece this.signedPieceCopy}}
                @onConfirmChangeAccessLevel={{fn this.saveAccessLevelOfSignedPiece this.signedPieceCopy}}
                @onCancelChangeAccessLevel={{perform this.loadSignedPieces}}
              />
            </div>
          </div>
        </div>
      {{/if}}
    </Auk::Panel::Body>
  </Auk::Panel>
{{/if}}
{{#if this.isOpenVerifyDeleteModal}}
  {{!-- TODO: vl-refactor --}}
  {{!-- We can't use AuModal here because said modals get rendered inside a
        "wormhole" div. The current component is also part of a modal which gets
        rendered in the same "wormhole", so opening another AuModal here will
        overwrite the existing page content, and break the route. If AuModals
        ever support rendering multiple modals over each other, we can use one
        here, otherwise we might want to make the doc view not be a modal. --}}
  <WebComponents::VlModalVerify
    @title={{t "document-delete"}}
    @message={{t "delete-document-message"}}
    @onCancel={{fn (mut this.isOpenVerifyDeleteModal) false}}
    @onVerify={{this.verifyDeleteDocument}}
  />
{{/if}}

{{#if this.isOpenVerifyDeleteSignFlow}}
  {{!-- TODO: vl-refactor --}}
  {{!-- We can't use AuModal here because said modals get rendered inside a
        "wormhole" div. The current component is also part of a modal which gets
        rendered in the same "wormhole", so opening another AuModal here will
        overwrite the existing page content, and break the route. If AuModals
        ever support rendering multiple modals over each other, we can use one
        here, otherwise we might want to make the doc view not be a modal. --}}
  <WebComponents::VlModalVerify
    @title={{t "delete-signed-piece"}}
    @message={{t "verify-delete-signed-piece"}}
    @onCancel={{toggle "isOpenVerifyDeleteSignFlow" this}}
    @onVerify={{this.verifyDeleteSignFlow.perform}}
    @isLoading={{this.verifyDeleteSignFlow.isRunning}}
  />
{{/if}}
