/* Appuniversum components
   ========================================================================== */

// SCSS variables (to override)

$au-button-height: 3.6rem;
$au-label-color: var(--au-gray-700);


// Imports
// sourced from "@appuniversum/ember-appuniversum" npm package

@import '@appuniversum/ember-appuniversum/styles/components/c-alert';
@import '@appuniversum/ember-appuniversum/styles/components/c-badge';
@import '@appuniversum/ember-appuniversum/styles/components/c-body-container';
@import '@appuniversum/ember-appuniversum/styles/components/c-button';
@import '@appuniversum/ember-appuniversum/styles/components/c-button-group';
@import '@appuniversum/ember-appuniversum/styles/components/c-card';
@import '@appuniversum/ember-appuniversum/styles/components/c-content';
@import '@appuniversum/ember-appuniversum/styles/components/c-control';
@import '@appuniversum/ember-appuniversum/styles/components/c-control-group';
@import '@appuniversum/ember-appuniversum/styles/components/c-dropdown';
@import '@appuniversum/ember-appuniversum/styles/components/c-heading';
@import '@appuniversum/ember-appuniversum/styles/components/c-help-text';
@import '@appuniversum/ember-appuniversum/styles/components/c-hr';
@import '@appuniversum/ember-appuniversum/styles/components/c-fieldset';
@import '@appuniversum/ember-appuniversum/styles/components/c-form';
@import '@appuniversum/ember-appuniversum/styles/components/c-form-row';
@import '@appuniversum/ember-appuniversum/styles/components/c-icon';
@import '@appuniversum/ember-appuniversum/styles/components/c-input';
@import '@appuniversum/ember-appuniversum/styles/components/c-label';
@import '@appuniversum/ember-appuniversum/styles/components/c-link';
@import '@appuniversum/ember-appuniversum/styles/components/c-list';
@import '@appuniversum/ember-appuniversum/styles/components/c-list-horizontal';
@import '@appuniversum/ember-appuniversum/styles/components/c-list-navigation';
@import '@appuniversum/ember-appuniversum/styles/components/c-loader';
@import '@appuniversum/ember-appuniversum/styles/components/c-pill';
@import '@appuniversum/ember-appuniversum/styles/components/c-main-container';
@import '@appuniversum/ember-appuniversum/styles/components/c-modal';
@import '@appuniversum/ember-appuniversum/styles/components/c-sidebar';
@import '@appuniversum/ember-appuniversum/styles/components/c-table';
@import '@appuniversum/ember-appuniversum/styles/components/c-toaster';
@import '@appuniversum/ember-appuniversum/styles/components/c-toolbar';
@import '@appuniversum/ember-appuniversum/styles/components/c-toggle-switch';


// CSS variables (to override)

:root {
  --au-outline: 0.3rem solid #{$auk-yellow-500};
  --au-outline-color: #{$auk-yellow-500};

  --au-icon-size: 1.6rem;
  --au-icon-size-medium: 1.8rem;
  --au-icon-size-large: 2.2rem;
}


// Fixes

.au-c-modal__close {
  background-color: transparent; // fix UA default background-color styling
}

.au-c-dropdown__button {
  background-color: transparent; // fix UA default background-color styling
}

.au-c-alert__close {
  background-color: transparent; // fix UA default background-color styling
}


// Overrides

.au-c-pill {
  line-height: 1; // vertical alignment is a bit off in Kaleidos
  border-radius: .5rem; // default border radius is .5rem in Kaleidos
  padding-top: 0;
  white-space: nowrap;
  overflow: hidden;

  &.au-c-pill--hover { // use the combined selector here (although BEM-naming is used within ember-appuniversum) to make sure the value is overridden
    cursor: pointer;
  }
}

.au-c-pill--link {
  cursor: pointer !important;
}

.au-c-link,
.au-c-button--link,
.au-c-button--link-secondary { // change button link to Kaleidos style
  text-decoration: none;
  font-weight: 500;

  &:hover,
  &:focus {
    text-decoration: none;
  }
}

.au-c-link {
  border-radius: $au-button-border-radius;
}

.au-c-list-navigation__link {
  font-weight: 500;
  text-decoration: none;
}

.au-c-modal:not(.au-c-modal--large, .au-c-modal--fullscreen) {
  max-width: 800px;
}

.au-c-modal__header {
  padding: .7rem 2rem;

  @include mq(medium) {
    padding: 1.4rem 2rem;
  }
}

.au-c-modal__title {
  @include au-font-size(var(--au-h5-small));

  @include mq(medium) {
    @include au-font-size(var(--au-h5));
  }
}

.au-c-content {
  @include au-font-size(1.5rem, 1.6); // default font size in Kaleidos
  color: $auk-color-text; // default text color in Kaleidos

  h1, h2, h3, h4, h5, h6, // default heading styling in Kaleidos
  .au-c-heading--1,
  .au-c-heading--2,
  .au-c-heading--3,
  .au-c-heading--4,
  .au-c-heading--5,
  .au-c-heading--6 {
    color: $auk-color-heading;
    font-weight: 500;
  }

  // override heading font sizes so media queries don't apply
  h1,
  .au-c-heading--1 {
    @include au-font-size($au-content-heading-1);
  }

  h2,
  .au-c-heading--2 {
    @include au-font-size($au-content-heading-2);
  }

  h3,
  .au-c-heading--3 {
    @include au-font-size($au-content-heading-3);
  }

  h4,
  .au-c-heading--4 {
    @include au-font-size($au-content-heading-4);
  }

  h5,
  .au-c-heading--5 {
    @include au-font-size($au-content-heading-5);
  }

  h6,
  .au-c-heading--6 {
    @include au-font-size($au-content-heading-6);
  }

  ul:not(.au-c-list-horizontal) li + li { // override list item spacing to match the one in Kaleidos a bit more
    margin-top: 0.1rem;
  }

  ul.au-c-list  li + li { // this styling needs to be reset again unfortunately
    margin-top: 0;
  }

  &,
  > div:not([class]) {
    // override child (and heading) spacing to match the one in Kaleidos a bit more
    > * + * {
      margin-top: 1.5rem;
    }

    > p + ul,
    > p + ol {
      margin-top: 0.2rem;
    }

    > ul[data-list-style='upper-alpha'] + p,
    > ol[data-list-style='upper-alpha'] + p {
      margin-top: 0;
    }

    > * + h1,
    > * + h2,
    > * + h3 {
      margin-top: 3rem;
    }

    > * + h4,
    > * + h5,
    > * + h6 {
      margin-top: 1.5rem;
    }
  }

  em { // default text color in Kaleidos
    color: $auk-color-text;
  }

  sub {
    vertical-align: sub;
    font-size: smaller;
  }

  sup {
    vertical-align: super;
    font-size: smaller;
  }

  .auk-table & { // override the styling inherited from parent auk-table elements/components to its default
    table {
      td {
        padding: 0;
        border: none;
        vertical-align: baseline;
      }

      tr:last-child {
        td {
          border-bottom: none;
        }
      }
    }
  }

  .auk-table--striped & { // override the styling inherited from parent striped auk-table elements/components to its default
    table {
      tbody {
        tr {
          td {
            background-color: transparent;
          }
        }
      }
    }
  }

  :is(.auk-table, *) & { // explicit selector to increase specificity (TODO: remove when either au-kaleidos-css table selectors are adjusted or only tables from ember-appuniverum are used)
    table {
      position: relative;
      display: table;
      min-width: 50rem;
      width: 100%;
      border: 0.1rem solid var(--au-gray-300);
      border-radius: var(--au-radius);
      border-collapse: collapse;
      font-size: inherit;

      td {
        max-width: 55ch;
        position: relative;
      }

      td + td {
        &:after {
          content: "";
          display: block;
          position: absolute;
          width: 0.1rem;
          left: -0.1rem;
          top: 0;
          height: 100%;
          border-left: 0.1rem dotted var(--au-gray-300);
        }
      }

      tbody {
        tr {
          border-bottom: 0.1rem solid var(--au-gray-300);
          background-color: var(--au-white);
        }

        td {
          padding: $au-unit-tiny;
        }
      }
    }
  }
}

.au-c-button {
  vertical-align: middle;
}

.au-c-button--link,
.au-c-button--tertiary,
.au-c-button--link-secondary {
  vertical-align: baseline;
}

.au-c-icon {
  bottom: 0;
}

.au-c-dropdown > .au-c-button--naked { // TODO: delete when `.au-c-dropdown > .au-c-button--naked` override inside ember-appuniversum is removed
  &.au-c-button--icon-only {
    padding: 0 $au-unit-small;
    height: $au-button-height;
    line-height: $au-button-height - $au-button-border * 2;

    padding: 0 calc((#{$au-button-icon-only-width - ($au-button-border * 2)} - var(--au-icon-size-medium)) / 2);
  }

  &.au-c-button--icon-only.au-c-button--large {
    padding: 0 calc((#{$au-button-icon-only-width-large - ($au-button-border * 2)} - var(--au-icon-size-large)) / 2);
  }
}

.au-c-dropdown__menu {
  min-width: 23rem;
}

.au-c-dropdown__menu [role="menuitem"] {
  padding: 1rem 1.5rem;
  border: none;
}

.au-c-dropdown__menu > [role="menuitem"] + [role="menuitem"],
.au-c-dropdown__menu > [role="group"] + [role="group"],
.au-c-dropdown__menu > [role="group"] + [role="menuitem"],
.au-c-dropdown__menu > [role="menuitem"] + [role="group"] {
  border-top: none;
}

.au-c-input:focus {
  border-color: $au-input-border-color !important;
  box-shadow: none !important;

  outline: var(--au-outline);
  outline-offset: var(--au-outline-offset);
}

.au-c-control__indicator {
  margin-top: 0.4rem; // TODO: delete when global line height from AU is applied here in Kaleidos
}

.au-o-layout {
  padding-right: $au-unit-small;
  padding-left: $au-unit-small;

  @include mq($au-layout-breakpoint) {
    padding-right: $au-unit;
    padding-left: $au-unit;
  }
}

// Modal fixes
.au-c-modal--fullscreen {
  max-width: 100%;
  max-height: 100%;
  width: 100%;
  height: 100%;
  left: 0;
  border-radius: 0;
}

.au-c-modal__title {
  @include au-font-size($au-h5);
}

.au-c-modal__close {
  background-color: $au-white;
}

// Fix missing noactions class
.auk-table--noactions .data-table__actions--top {
  display: none;
}

// Fieldset

.au-c-fieldset {
  gap: $au-unit-small;
}

.au-c-fieldset--inline {
  gap: $au-unit;
}

.au-c-fieldset-legend {
  color: $auk-gray-700; // TODO: delete when auk-label as a whole is refactored
  font-size: var(--au-global-font-size) !important;
}

// Toggle switch

.au-c-toggle-switch__label {
  &:empty {
    margin-left: 0;
  }
}

// Control group

.au-c-control-group {
  gap: .6rem;

  > .au-c-control-group {
    margin-left: 2rem;
  }

  + .au-c-control-group {
    margin-top: .6rem;
  }
}

.au-c-control-group--inline {
  gap: 2rem;

  &:has(.au-c-control-group) {
    > .au-c-control-group {
      @include style-warning('Nested control groups can\'t be used when the parent group has @layout \'inline\' defined.');
    }
  }
}

// Alert

.au-c-alert {
  font-size: 1.5rem;
}

.au-c-alert--small {
  .au-c-icon {
    height: 1.5rem;
    width: 1.6rem;
  }
}

// Badge

.auk-empty-state {
  .au-c-badge {
    margin-right: 2rem;
  }
}

.au-c-badge--small {
  height: 2.3rem;
  width: 2.4rem;

  .au-c-icon {
    height: 1.5rem;
    width: 1.6rem;
  }
}

// Toaster

.au-c-toaster {
  width: auto;
  align-items: flex-end;
}

.au-c-toaster {
  .au-c-alert {
    min-width: 420px;
    max-width: 580px;
  }
}

// Loader

.au-c-loader__animation {
  height: 1.6rem + $au-unit;

  .au-c-loader--small & {
    height: 1.6rem;
  }

  .au-c-loader--large & {
    height: 1.6rem + $au-unit-large;
  }
}

// Additions

.au-c-pill--blank {
  color: $au-pill-color;
  background-color: transparent;
  border-color: transparent;
}

@media print {
  .au-c-pill,
  .au-c-badge {
    print-color-adjust: exact;
    -webkit-print-color-adjust: exact;
  }
}

.au-c-control-group--grid {
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1rem 2rem;

  > * {
    width: calc(33% - 2rem);
  }
}

.au-c-input--mask-normal-letter-spacing {
  letter-spacing: inherit;
}

.au-c-badge--medium {
  height: 3.5rem - 0.1rem; // compensate for visual distortion of perfect circle
  width: 3.5rem;
  margin-right: 0;

  .au-c-icon {
    height: 2.1rem - 0.1rem; // compensate for visual distortion of perfect circle
    width: 2.1rem;
  }

  .au-c-badge__number {
    font-size: 1.8rem;
  }
}

.au-c-content {
  ol:not(.au-c-list-horizontal) {
    list-style: decimal;
    margin-left: $au-unit;

    & > li > ol:not([data-list-style]) {
      list-style-type: inherit;
    }

    &[data-list-style='decimal'] {
      list-style-type: decimal;
    }

    &[data-list-style='upper-roman'] {
      list-style-type: upper-roman;
    }

    &[data-list-style='lower-alpha'] {
      list-style-type: lower-alpha;
    }

    &[data-list-style='upper-alpha'] {
      list-style-type: upper-alpha;
      margin-left: 2rem;
      ol {
        margin-left: 2rem;
      }
    }
  }

  ol.au-c-list {
    list-style: none;
    margin-left: 0;
  }

  ol:not(.au-c-list-horizontal) li + li {
    margin-top: 0.1rem;
  }

  ol.au-c-list li + li {
    margin-top: 0;
  }

  .list-style-none {
    list-style-type: none;
  }

  // Provides the general styling for the decimal-extended (multi-level) list type
  // NOTE: This is limited to a certain levels deep because otherwise the styling keep overriding each other (`[data-list-style='decimal-extended']` and the rest of the ol/ul selectors)
  @mixin decimal-extended-styling($levels, $current-level: 1) {
    display: table;
    list-style-type: none;
    margin: 0;
    counter-reset: item;

    > li {
      display: table-row;
      counter-increment: item;

      &:before {
        display: table-cell;
        min-width: 2.4rem;
        padding-right: .5ch;
        text-align: end;
        white-space: nowrap;
        font-variant-numeric: tabular-nums;
        content: counters(item, ".") ". ";
      }

      @if $current-level < $levels {
        > ol:not([data-list-style]) {
          @include decimal-extended-styling($levels, $current-level + 1);
        }
      }

      @if $current-level == $levels {
        > ol:not([data-list-style]) {
          list-style-type: decimal;

          ol:not([data-list-style]) {
            list-style-type: inherit;
          }
        }
      }
    }
  }

  ol[data-list-style='decimal-extended'] {
    @include decimal-extended-styling(5, 1);
  }

  [data-indentation-level='1'] {
    margin-left: 2.4rem;
  }

  [data-indentation-level='2'] {
    margin-left: 4.8rem;
  }

  [data-indentation-level='3'] {
    margin-left: 7.2rem;
  }

  [data-indentation-level='4'] {
    margin-left: 9.6rem;
  }
}

.au-c-link {
  .au-c-icon {
    flex: 0 0 auto;
  }
}

.au-u-flex-item--shrink {
  flex: 0 1 0 !important;
}

.au-u-flex-item--fixed {
  flex: 0 0 auto !important;
}

.au-u-maximize-width {
  width: 100% !important;
}

.au-u-maximize-height {
  height: 100% !important;
}

// TODO: the selector below is not an ideal solution, this needs to replaced by a class selector like `.rdfa-table--fixed` or something similar when the omitted class issue on tabled within ember-rdfa-editor is fixed
.au-c-content {
  #attendees,
  #absentees {
    table-layout: fixed;
  }
}
