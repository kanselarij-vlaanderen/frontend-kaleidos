// Variables
$badge-colors: (
  positive: (
    fg: $auk-white,
    bg: $auk-green-500,
    hoverfg: $auk-white,
    hoverbg: $auk-green-700
  ),
  action: (
    fg: $auk-white,
    bg: $auk-color-primary,
    hoverfg: $auk-white,
    hoverbg: $auk-blue-700
  ),
  negative: (
    fg: $auk-white,
    bg: $auk-red-500,
    hoverfg: $auk-white,
    hoverbg: $auk-red-700
  ),
  warning: (
    fg: $auk-color-text,
    bg: $auk-yellow-500
  ),
  neutral: (
    fg: $auk-color-text,
    bg: $auk-gray-200,
    hoverfg: $auk-white,
    hoverbg: $auk-color-primary
  ),
  light: (
    fg: $auk-color-text,
    bg: $auk-white,
    hoverfg: $auk-white,
    hoverbg: $auk-color-primary
  )
);

$badge-sizes: (
  xxsmall: (size: 1.8rem, font: 0.8rem, respsize: 1.5rem, respfont: 0.7rem),
  xsmall: (size: 1.8rem, font: 1.3rem, respsize: 1.5rem, respfont: 1.1rem),
  small: (size: 2.6rem, font: 1.3rem, respsize: 2.2rem, respfont: 1.2rem),
  medium: (size: 4rem, font: 2rem, respsize: 3rem, respfont: 1.5rem),
  large: (size: 5rem, font: 2.5rem, respsize: 4rem, respfont: 2rem)
);

$alert-padding: 2rem;
$alert-padding-small: 1.5rem;

// Mixins
@mixin vi-u-badge--color($colorname) {
  @each $name, $colors in $badge-colors {
    @if $colorname == $name {
      background-color: map-get($colors, bg);
      color: map-get($colors, fg);
    }
  }
}

@mixin vi-u-badge--size($sizename) {
  @each $name, $sizes in $badge-sizes {
    @if $sizename == $name {
      width: map_get($sizes, size);
      height: map_get($sizes, size);
      line-height: map_get($sizes, size);

      &::before {
        font-size: map_get($sizes, font);
      }
    }
  }
}

// Alert
.vl-alert {
  display: flex;
  position: relative;
  background-color: $auk-gray-200;
  font-size: 1.6rem;
  line-height: 1.4;
  border: 0.1rem solid $auk-gray-200;
  padding: $alert-padding;
  margin-bottom: 1.5rem;

  // Alert close
  &__close {
    display: flex;
    position: absolute;
    border: 0;
    cursor: pointer;
    transform-origin: center;
    transition: transform 0.2s;
    top: 0.3rem;
    right: 0.3rem;
    padding: 0.5rem;
    overflow: hidden;

    &:hover,
    &:focus {
      color: $auk-color-primary;
      transform: rotate(90deg);
    }
  }

  &__content {
    display: flex;
    justify-content: center;
    flex-direction: column;
  }

  // Alert icon
  &__icon {
    display: inline-block;
    border-radius: 50%;
    text-align: center;
    vertical-align: middle;

    // place the icon in the middle
    &::before {
      margin: 0;
      display: block;
    }

    &--link {
      margin-right: 1rem;
    }

    &--link-after {
      margin-left: 1rem;
    }

    @include vi-u-badge--size("medium");
    flex: 0 0 auto;
    background: $auk-white;
    margin-right: $alert-padding;
  }

  // Alert loader
  &__loader {
    margin-right: $alert-padding;
  }

  // Alert title
  &__title {
    font-weight: 500;
  }


  // Error modifier
  &--error {
    background-color: $auk-red-100;

    .vl-alert__icon {
      @include vi-u-badge--color("negative");
    }
  }

  // Warning modifier
  &--warning {
    background-color: $auk-yellow-100;

    .vl-alert__icon {
      @include vi-u-badge--color("warning");
    }
  }

  // Success modifier
  &--success {
    background-color: $auk-green-100;

    .vl-alert__icon {
      // @include vi-check;
      @include vi-u-badge--color("positive");
    }
  }

  // Small modifier
  &--small {
    font-size: 1.4rem;
    line-height: 1.2;
    padding: 1rem;

    .vl-alert__icon {
      width: 2rem;
      height: 2rem;
      line-height: 2rem;
      margin-right: 0.8rem;
    }
  }
}
